pool:
  name: Azure Pipelines
  
variables:
  BuildPlatform: 'x64'
  BuildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.3.0'
  inputs:
    versionSpec: 4.3.0

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: 'Source/DeviceSymptomsHistory-DotNetCore/DeviceSymptomsHistoryWebApp/DeviceSymptomsHistoryWebApp.csproj'
    feedsToUse: config
    nugetConfigPath: NugetConfig/nuget.config

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: 'Source/DeviceSymptomsHistory-DotNetCore/DeviceSymptomsHistoryWebApp/DeviceSymptomsHistoryWebApp.csproj'
    arguments: '-c Release -o .\app\build'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    arguments: '-c Release -o .\app\publish'
    zipAfterPublish: false
    modifyOutputPath: false

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'

- task: Docker@2
  displayName: buildAndPush
  inputs:
    containerRegistry: 'SUPPLYCHAIN_ACR_ACRSCEASTUSXE5D'
    repository: '$(acrImageName)'
    Dockerfile: 'Source/DeviceSymptomsHistory-DotNetCore/Dockerfile'
    buildContext: '$(Build.ArtifactStagingDirectory)'

- bash: |
   # Write your commands here
   
   echo 'Variables: '
   
   env | sort
   
   echo "-----------------------"
   docker images | grep ${BUILD_BUILDNUMBER} | cut -d " " -f 1
   echo "-----------------------"
   
   image=`docker images | grep ${BUILD_BUILDNUMBER} | cut -d " " -f 1`
   mkdir -p $(Pipeline.Workspace)/variables
   echo "$image" > $(Pipeline.Workspace)/variables/image
   
  displayName: 'Publish Build Image'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: VARIABLES'
  inputs:
    PathtoPublish: '$(Pipeline.Workspace)/variables'
    ArtifactName: VARIABLES

